AWSTemplateFormatVersion: "2010-09-09"
Description: Provision Container Instances and join to the ECS Cluster.

Parameters:
  SshKeyName:
    Description: SSH Key Name for Container Instance
    Type: String
  VpcId:
    Description: VPC ID to deploy resources.
    Type: String
  AlbSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security Group ID of ALB. This is to allow ALB to forward traffic to Container Instances.
  ECSClusterName:
    Type: String
    Description: ECS Cluster to deploy the Containers.
    Default: ecs-workshop-cluster
  ECSClusterSize:
    Description: Number of Container Instances
    Type: Number
    Default: 2
  InstanceType:
    Description: Container Instance Type
    Type: String
    Default: m5.large
  PrivateSubnet1Id:
    Type: AWS::EC2::Subnet::Id
    Description: Private Subnet-1 ID
  PrivateSubnet2Id:
    Type: AWS::EC2::Subnet::Id
    Description: Private Subnet-2 ID
  
Mappings:
  AWSRegionToAMI:
    us-east-2:
      AMI: ami-956e52f0
    us-east-1:
      AMI: ami-5253c32d
    us-west-2:
      AMI: ami-d2f489aa
    us-west-1:
      AMI: ami-6b81980b
    eu-west-3:
      AMI: ami-ca75c4b7
    eu-west-2:
      AMI: ami-3622cf51
    eu-west-1:
      AMI: ami-c91624b0
    eu-central-1:
      AMI: ami-10e6c8fb
    ap-northeast-2:
      AMI: ami-7c69c112
    ap-northeast-1:
      AMI: ami-f3f8098c
    ap-southeast-2:
      AMI: ami-bc04d5de
    ap-southeast-1:
      AMI: ami-b75a6acb
    ca-central-1:
      AMI: ami-da6cecbe
    ap-south-1:
      AMI: ami-c7072aa8
    sa-east-1:
      AMI: ami-a1e2becd

Resources:
  # IAM Role for Container Instances
  ContainerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: !Sub ${ECSClusterName}-ECSRole-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service: "ec2.amazonaws.com"
      Policies:
        - 
          PolicyName: ecs-service
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - 
                Effect: "Allow"
                Action:
                  - ecs:CreateCluster
                  - ecs:DeregisterContainerInstance
                  - ecs:DiscoverPollEndpoint
                  - ecs:Poll
                  - ecs:RegisterContainerInstance
                  - ecs:StartTelemetrySession
                  - ecs:Submit*
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:BatchCheckLayerAvailability
                  - ecr:BatchGetImage
                  - ecr:GetDownloadUrlForLayer
                  - ecr:GetAuthorizationToken
                  - ssm:DescribeAssociation
                  - ssm:GetDeployablePatchSnapshotForInstance
                  - ssm:GetDocument
                  - ssm:GetManifest
                  - ssm:GetParameters
                  - ssm:ListAssociations
                  - ssm:ListInstanceAssociations
                  - ssm:PutInventory
                  - ssm:PutComplianceItems
                  - ssm:PutConfigurePackageResult
                  - ssm:UpdateAssociationStatus
                  - ssm:UpdateInstanceAssociationStatus
                  - ssm:UpdateInstanceInformation
                  - ec2messages:AcknowledgeMessage
                  - ec2messages:DeleteMessage
                  - ec2messages:FailMessage
                  - ec2messages:GetEndpoint
                  - ec2messages:GetMessages
                  - ec2messages:SendReply
                  - cloudwatch:PutMetricData
                  - ec2:DescribeInstanceStatus
                  - ds:CreateComputer
                  - ds:DescribeDirectories
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                  - s3:PutObject
                  - s3:GetObject
                  - s3:AbortMultipartUpload
                  - s3:ListMultipartUploadParts
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                Resource: "*"
  ContainerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref ContainerInstanceRole
  
  # Security Group
  ContainerInstanceSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: "Container Instances Security Group"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 32768 # ephemeral port range 32768â€“61000 on the latest Amazon ECS-optimized AMI
          ToPort: 61000
          SourceSecurityGroupId: !Ref AlbSecurityGroupId
  
  # Container Instance
  ContainerInstanceLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:  !FindInMap [AWSRegionToAMI, !Ref "AWS::Region", AMI]
      InstanceType: !Ref InstanceType
      KeyName: !Ref SshKeyName
      SecurityGroups:
        - Fn::GetAtt: [ContainerInstanceSecurityGroup, GroupId]
      AssociatePublicIpAddress: true
      IamInstanceProfile: !Ref ContainerInstanceProfile
      UserData:
        Fn::Base64: !Sub |
            #!/bin/bash
            yum update -y 
            yum install -y aws-cfn-bootstrap
            yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
            /opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource ContainerInstanceLaunchConfig
            /opt/aws/bin/cfn-signal -e $? --region ${AWS::Region} --stack ${AWS::StackName} --resource ContainerInstanceAutoScalingGroup
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              awslogs: []
          commands:
            01_add_instance_to_cluster:
              command: !Sub echo ECS_CLUSTER=${ECSClusterName} >> /etc/ecs/ecs.config
          files:
            /etc/cfn/cfn-hup.conf:
              content:
                Fn::Sub: |
                  [main]
                  stack=${AWS::StackId}
                  region=${AWS::Region}
                  verbose=true
                  interval=5
              mode: "000400"
              owner: root
              group: root

            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content:
                Fn::Sub: |
                  [cfn-auto-reloader-hook]
                  triggers=post.update
                  path=Resources.ContainerInstanceLaunchConfig.Metadata.AWS::CloudFormation::Init
                  action=/opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource ContainerInstanceLaunchConfig
              mode: "000400"
              owner: root
              group: root

            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}

            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file = /var/lib/awslogs/agent-state

                [/var/log/dmesg]
                file = /var/log/dmesg
                log_group_name = ${ECSClusterName}-/var/log/dmesg
                log_stream_name = ${ECSClusterName}

                [/var/log/messages]
                file = /var/log/messages
                log_group_name = ${ECSClusterName}-/var/log/messages
                log_stream_name = ${ECSClusterName}
                datetime_format = %b %d %H:%M:%S

                [/var/log/docker]
                file = /var/log/docker
                log_group_name = ${ECSClusterName}-/var/log/docker
                log_stream_name = ${ECSClusterName}
                datetime_format = %Y-%m-%dT%H:%M:%S.%f

                [/var/log/ecs/ecs-init.log]
                file = /var/log/ecs/ecs-init.log.*
                log_group_name = ${ECSClusterName}-/var/log/ecs/ecs-init.log
                log_stream_name = ${ECSClusterName}
                datetime_format = %Y-%m-%dT%H:%M:%SZ

                [/var/log/ecs/ecs-agent.log]
                file = /var/log/ecs/ecs-agent.log.*
                log_group_name = ${ECSClusterName}-/var/log/ecs/ecs-agent.log
                log_stream_name = ${ECSClusterName}
                datetime_format = %Y-%m-%dT%H:%M:%SZ

                [/var/log/ecs/audit.log]
                file = /var/log/ecs/audit.log.*
                log_group_name = ${ECSClusterName}-/var/log/ecs/audit.log
                log_stream_name = ${ECSClusterName}
                datetime_format = %Y-%m-%dT%H:%M:%SZ
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
              awslogs:
                enabled: true
                ensureRunning: true
                files:
                  - /etc/awslogs/awslogs.conf
                  - /etc/awslogs/awscli.conf
  ContainerInstanceAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1Id
        - !Ref PrivateSubnet2Id
      LaunchConfigurationName: !Ref ContainerInstanceLaunchConfig
      MinSize: !Ref ECSClusterSize
      MaxSize: !Ref ECSClusterSize
      DesiredCapacity: !Ref ECSClusterSize
      Tags:
        - Key: Name
          Value: !Sub ${ECSClusterName} - Container Instance
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        PauseTime: PT15M
        SuspendProcesses:
          - HealthCheck
          - ReplaceUnhealthy
          - AZRebalance
          - AlarmNotification
          - ScheduledActions
        WaitOnResourceSignals: true